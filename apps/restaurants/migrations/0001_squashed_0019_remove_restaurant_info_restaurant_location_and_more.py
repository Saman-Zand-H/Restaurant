# Generated by Django 4.1 on 2023-02-01 23:52

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import iranian_cities.fields
import restaurants.utils
import uuid


class Migration(migrations.Migration):

    replaces = [('restaurants', '0001_initial'), ('restaurants', '0002_initial'), ('restaurants', '0003_alter_cuisine_public_uuid_alter_item_public_uuid_and_more'), ('restaurants', '0004_rename_item_content_type_orderitem_cart_item_content_type_and_more'), ('restaurants', '0005_remove_orderitem_cart_item_content_type_and_more'), ('restaurants', '0006_order_public_uuid'), ('restaurants', '0007_alter_orderitem_unique_together'), ('restaurants', '0008_order_done'), ('restaurants', '0009_alter_order_order_type'), ('restaurants', '0010_alter_order_options'), ('restaurants', '0011_alter_order_timestamp'), ('restaurants', '0012_orderitem_timestamp'), ('restaurants', '0013_orderitem_public_uuid'), ('restaurants', '0014_alter_orderitem_public_uuid'), ('restaurants', '0015_alter_item_cuisine_alter_order_order_number'), ('restaurants', '0016_alter_orderitem_paid_price'), ('restaurants', '0017_order_user_order_user_payment'), ('restaurants', '0018_alter_restaurant_table_count'), ('restaurants', '0019_remove_restaurant_info_restaurant_location_and_more')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('azbankgateways', '0004_auto_20211115_1500'),
        ('iranian_cities', '0005_auto_20221004_0004'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_uuid', models.UUIDField(default=uuid.uuid4)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='items/pictures', validators=[restaurants.utils.validate_size, restaurants.utils.validate_extension])),
                ('description', models.TextField(blank=True, null=True)),
                ('cuisine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cuisine_items', to='restaurants.cuisine')),
            ],
        ),
        migrations.CreateModel(
            name='ItemVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('price', models.PositiveIntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_variations', to='restaurants.item')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_fee', models.PositiveIntegerField()),
                ('max_distance', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('province', iranian_cities.fields.ProvinceField(on_delete=django.db.models.deletion.CASCADE, to='iranian_cities.province')),
                ('city', iranian_cities.fields.CityField(on_delete=django.db.models.deletion.CASCADE, to='iranian_cities.city')),
                ('geo_address', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Restaurants Locations',
            },
        ),
        migrations.CreateModel(
            name='RestaurantType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='restaurants/type_icons')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(auto_created=True, blank=True, default=0, null=True)),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('table_count', models.PositiveIntegerField(default=0)),
                ('opens_at', models.TimeField()),
                ('closes_at', models.TimeField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='restaurants/logos')),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurant', to='restaurants.restaurantdelivery')),
                ('restaurant_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurant_type_restaurants', to='restaurants.restauranttype')),
                ('location', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_location', to='restaurants.restaurantlocation')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('d', 'delivery'), ('i', 'dine-in')], max_length=1)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('order_number', models.PositiveIntegerField(blank=True, default=1)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_orders', to='restaurants.restaurant')),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, unique=True)),
                ('done', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_orders', to=settings.AUTH_USER_MODEL)),
                ('user_payment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank_order', to='azbankgateways.bank')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='cuisine',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_cuisines', to='restaurants.restaurant'),
        ),
        migrations.AlterField(
            model_name='cuisine',
            name='public_uuid',
            field=models.UUIDField(auto_created=True, default=uuid.uuid4, unique=True),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('review', models.TextField(blank=True, null=True)),
                ('score', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_reviews', to='restaurants.item')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterField(
            model_name='item',
            name='cuisine',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='cuisine_items', to='restaurants.cuisine'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_price', models.PositiveIntegerField(default=0)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='restaurants.order')),
                ('count', models.PositiveIntegerField(default=1)),
                ('item', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='item_orders', to='restaurants.itemvariation')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'unique_together': {('order', 'item')},
            },
        ),
    ]
