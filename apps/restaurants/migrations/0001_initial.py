# Generated by Django 4.1 on 2022-09-17 16:06

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import restaurants.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_uuid', models.UUIDField(default=uuid.uuid4)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=100)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='items/pictures', validators=[restaurants.utils.validate_size, restaurants.utils.validate_extension])),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('price', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('d', 'delivery'), ('i', 'in place')], max_length=1)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('order_number', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('item_object_id', models.PositiveBigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(auto_created=True, blank=True, default=0, null=True)),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('table_count', models.PositiveIntegerField()),
                ('opens_at', models.TimeField()),
                ('closes_at', models.TimeField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='restaurants/logos')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_fee', models.PositiveIntegerField()),
                ('max_distance', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('province', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('geo_address', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Restaurants Locations',
            },
        ),
        migrations.CreateModel(
            name='RestaurantType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='restaurants/type_icons')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('review', models.TextField(blank=True, null=True)),
                ('score', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_reviews', to='restaurants.itemvariation')),
            ],
        ),
    ]
